---
const { content, media_type, recommend = false } = Astro.props;
import { Image } from "astro:assets";
---

<div class=`mt-8 ${recommend == true ? "mx-2" : ""}`>
  <div class="relative group">
    <a href={`/${media_type}/${content.id}`} class="block relative">
      <Image
        src={content.poster_path != null
          ? `https://image.tmdb.org/t/p/w500/${content.poster_path}`
          : `https://placehold.co/500x750?text=:(`}
        alt={`${content.title} Poster`}
        class="thumbnail hover:opacity-75 transition ease-in-out duration-150"
        id=`movie-poster-${content.id}`
        inferSize={true}
      />
      <div
        class="hidden absolute inset-0 flex w-full h-full mx-auto items-center justify-center"
        id=`svg-overlay-${content.id}`
      >
        <div class="mx-auto">
          <svg
            class="w-20"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 300 150"
            ><path
              fill="none"
              stroke="#DC3636"
              stroke-width="13"
              stroke-linecap="round"
              stroke-dasharray="300 385"
              stroke-dashoffset="0"
              d="M275 75c0 31-27 50-50 50-58 0-92-100-150-100-28 0-50 22-50 50s23 50 50 50c58 0 92-100 150-100 24 0 50 19 50 50Z"
              ><animate
                attributeName="stroke-dashoffset"
                calcMode="spline"
                dur="1"
                values="685;-685"
                keySplines="0 0 1 1"
                repeatCount="indefinite"></animate></path
            ></svg
          >
        </div>
      </div>
    </a>
  </div>
  <div class="mt-2">
    <a
      href={`/${media_type}/${content.id}`}
      class=`${recommend == true ? "text-sm" : "text-lg"} text-md sm:text-lg mt-2 hover:text-gray-300`
      >{content.title || content.name}</a
    >
    {
      !recommend && (
        <div class="hidden sm:flex items-center text-gray-400 text-sm mt-1">
          <svg class="fill-current text-red-500 w-4" viewBox="0 0 24 24">
            <g data-name="Layer 2">
              <path
                d="M17.56 21a1 1 0 01-.46-.11L12 18.22l-5.1 2.67a1 1 0 01-1.45-1.06l1-5.63-4.12-4a1 1 0 01-.25-1 1 1 0 01.81-.68l5.7-.83 2.51-5.13a1 1 0 011.8 0l2.54 5.12 5.7.83a1 1 0 01.81.68 1 1 0 01-.25 1l-4.12 4 1 5.63a1 1 0 01-.4 1 1 1 0 01-.62.18z"
                data-name="star"
              />
            </g>
          </svg>
          <span class="ml-1">
            {parseFloat(content.vote_average.toFixed(1))}
          </span>
          <span class="mx-2">|</span>
          <span>{content.release_date || content.first_air_date}</span>
        </div>
      )
    }
  </div>
</div>
<script>
  const attachOverlay = () => {
    const posters = document.querySelectorAll(".thumbnail");

    const handlePosterClick = (e: Event) => {
      const poster = e.target as HTMLImageElement;
      const contentId = poster.id.split("-")[2];
      const overlay = document.getElementById(`svg-overlay-${contentId}`);
      poster.classList.add("opacity-50");
      overlay?.classList.remove("hidden");
    };

    posters.forEach((poster: Element) => {
      poster.addEventListener("click", handlePosterClick);
    });

    const cleanup = () => {
      posters.forEach((poster: Element) => {
        poster.removeEventListener("click", handlePosterClick);
      });
    };

    document.addEventListener("astro:before-swap", cleanup, { once: true });

    document.addEventListener("astro:after-swap", attachOverlay);
  };
  document.addEventListener("astro:page-load", attachOverlay);
</script>
