---
import InternalError from "../../../components/InternalError.astro";
import Pagination from "../../../components/Pagination.astro";
import ContentCard from "../../../components/ContentCard.astro";

const pageValue = Astro.url.searchParams.get("page") || 1;
const searchQuery = Astro.url.searchParams.get("q") || "";

let isError = false;
let total_pages = 1;
let dataArray: any[] = [];
let retries = 5;

const fetchSearch = async () => {
  try {
    const response = await fetch(
      `${Astro.url.origin}/api/v1/tmdb/search.json?query=${searchQuery}&page=${pageValue}`,
      {
        method: "GET",
      }
    );

    if (!response.ok) throw new Error(`API Fetch failed ${response.status}`);
    const parsedRes = await response.json();
    total_pages = parsedRes?.total_pages;
    dataArray = parsedRes?.results;
  } catch (error) {
    if (retries > 0) {
      retries--;
      console.log(`Retrying fetch.. Total retires left - ${retries}`);
      await fetchSearch();
    } else {
      isError = true;
      console.error(error);
    }
  }
};
await fetchSearch();
---

{isError && <InternalError />}
{
  !isError && (
    <div class="container mx-auto px-4 pt-16 mb-16">
      <div class="search-result">
        <h2 class="uppercase tracking-wider text-accent-light text-lg font-montserrat">
          Search Results
        </h2>
        {dataArray.length > 0 ? (
          <>
            <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-8">
              {dataArray?.map((item: any) => {
                if (item?.media_type == "movie" || item?.media_type == "tv") {
                  return (
                    <ContentCard content={item} media_type={item?.media_type} />
                  );
                } else return "";
              })}
            </div>
            {total_pages > 1 && (
              <Pagination currentPage={pageValue} totalPages={total_pages} />
            )}
          </>
        ) : (
          <div class="text-center py-16">
            <p class="mb-5 text-xl sm:text-3xl text-accent-light font-inter">
              {`Your search - ${searchQuery} - did not match any movies or shows`}
              .
            </p>
          </div>
        )}
      </div>
    </div>
  )
}
