---
import ContentCard from "../../../components/ContentCard.astro";
import InternalError from "../../../components/InternalError.astro";
import Pagination from "../../../components/Pagination.astro";

const pageValue = Astro.url.searchParams.get("page") || 1;

const { media_type } = Astro.props;

let isError = false;
let total_pages = 1;
let contentArray: any[] = [];
let retries = 5;
let totalItems = 0;
const fetchContentFromDB = async () => {
  try {
    const response = await fetch(
      `${Astro.url.origin}/api/v1/${media_type}/getdbdata?page=${pageValue}`,
      {
        method: "GET",
      }
    );
    if (!response.ok) throw new Error(`DB Fetch failed ${response.status}`);
    const parsedRes = await response.json();
    total_pages = parsedRes?.totalPages;
    totalItems = parsedRes?.totalItems;

    contentArray =
      media_type == "movie"
        ? parsedRes?.movies
        : media_type == "tv"
          ? parsedRes?.shows
          : [];
  } catch (error) {
    if (retries > 0) {
      retries--;
      console.log(`Retrying fetch.. Total retires left - ${retries}`);
      await fetchContentFromDB();
    } else {
      isError = true;
      console.error(error);
    }
  }
};
await fetchContentFromDB();
---

{isError && <InternalError />}
{
  !isError && (
    <div class="container mx-auto px-4 pt-16 mb-16">
      <div class="popular-movies ">
        <h2 class="uppercase tracking-wider text-accent-light text-lg font-montserrat flex flex-row">
          {media_type == "movie"
            ? "Cinema"
            : media_type == "tv"
              ? "Show"
              : "media"}{" "}
          Log
          <span class="mx-1 text-accent-dark">
            <h5> - </h5>
          </span>
          <span class="text-accent-dark">
            <h4>
              (<span class="mx-0.5 text-accent-light">{totalItems}</span>)
            </h4>
          </span>
        </h2>
        {contentArray.length > 0 ? (
          <>
            <div class="grid grid-cols-2 sm:grid-cols-4 md:grid-cols-6 gap-8">
              {contentArray?.map((item: any) => (
                <ContentCard content={item} media_type={media_type} />
              ))}
            </div>
            {total_pages > 1 && (
              <Pagination currentPage={pageValue} totalPages={total_pages} />
            )}
          </>
        ) : (
          <InternalError />
        )}
        <div id="sentinel" class="h-16 sm:h-0" />
      </div>
    </div>
  )
}
